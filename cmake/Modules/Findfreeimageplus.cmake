# - find freeimageplus
# FREEIMAGEPLUS_INCLUDE_DIR - Where to find freeimageplus header files (directory)
# FREEIMAGEPLUS_LIBRARIES - freeimageplus libraries
# FREEIMAGEPLUS_LIBRARY_RELEASE - Where the release library is
# FREEIMAGEPLUS_LIBRARY_DEBUG - Where the debug library is
# FREEIMAGEPLUS_FOUND - Set to TRUE if we found everything (library, includes and executable)

# Copyright (c) 2011 John Di Santi, <johndisanti@gmail.com>
#
# Redistribution and use is allowed according to the terms of the BSD license.
# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
#
# Generated by CModuler, a CMake Module Generator - http://gitorious.org/cmoduler

IF( FREEIMAGEPLUS_INCLUDE_DIR AND FREEIMAGEPLUS_LIBRARY_RELEASE AND FREEIMAGEPLUS_LIBRARY_DEBUG )
    SET(FREEIMAGEPLUS_FIND_QUIETLY TRUE)
ENDIF( FREEIMAGEPLUS_INCLUDE_DIR AND FREEIMAGEPLUS_LIBRARY_RELEASE AND FREEIMAGEPLUS_LIBRARY_DEBUG )

FIND_PATH( FREEIMAGEPLUS_INCLUDE_DIR FreeImagePlus.h  )

FIND_LIBRARY(FREEIMAGEPLUS_LIBRARY_RELEASE NAMES freeimageplus )

FIND_LIBRARY(FREEIMAGEPLUS_LIBRARY_DEBUG NAMES freeimageplus_d  HINTS /usr/lib/debug/usr/lib/ )

IF( FREEIMAGEPLUS_LIBRARY_RELEASE OR FREEIMAGEPLUS_LIBRARY_DEBUG AND FREEIMAGEPLUS_INCLUDE_DIR )
	SET( FREEIMAGEPLUS_FOUND TRUE )
ENDIF( FREEIMAGEPLUS_LIBRARY_RELEASE OR FREEIMAGEPLUS_LIBRARY_DEBUG AND FREEIMAGEPLUS_INCLUDE_DIR )

IF( FREEIMAGEPLUS_LIBRARY_DEBUG AND FREEIMAGEPLUS_LIBRARY_RELEASE )
	# if the generator supports configuration types then set
	# optimized and debug libraries, or if the CMAKE_BUILD_TYPE has a value
	IF( CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE )
		SET( FREEIMAGEPLUS_LIBRARIES optimized ${FREEIMAGEPLUS_LIBRARY_RELEASE} debug ${FREEIMAGEPLUS_LIBRARY_DEBUG} )
	ELSE( CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE )
    # if there are no configuration types and CMAKE_BUILD_TYPE has no value
    # then just use the release libraries
		SET( FREEIMAGEPLUS_LIBRARIES ${FREEIMAGEPLUS_LIBRARY_RELEASE} )
	ENDIF( CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE )
ELSEIF( FREEIMAGEPLUS_LIBRARY_RELEASE )
	SET( FREEIMAGEPLUS_LIBRARIES ${FREEIMAGEPLUS_LIBRARY_RELEASE} )
ELSE( FREEIMAGEPLUS_LIBRARY_DEBUG AND FREEIMAGEPLUS_LIBRARY_RELEASE )
	SET( FREEIMAGEPLUS_LIBRARIES ${FREEIMAGEPLUS_LIBRARY_DEBUG} )
ENDIF( FREEIMAGEPLUS_LIBRARY_DEBUG AND FREEIMAGEPLUS_LIBRARY_RELEASE )

IF( FREEIMAGEPLUS_FOUND )
	IF( NOT FREEIMAGEPLUS_FIND_QUIETLY )
		MESSAGE( STATUS "Found freeimageplus header file in ${FREEIMAGEPLUS_INCLUDE_DIR}")
		MESSAGE( STATUS "Found freeimageplus libraries: ${FREEIMAGEPLUS_LIBRARIES}")
	ENDIF( NOT FREEIMAGEPLUS_FIND_QUIETLY )
ELSE(FREEIMAGEPLUS_FOUND)
	IF( FREEIMAGEPLUS_FIND_REQUIRED)
		MESSAGE( FATAL_ERROR "Could not find freeimageplus" )
	ELSE( FREEIMAGEPLUS_FIND_REQUIRED)
		MESSAGE( STATUS "Optional package freeimageplus was not found" )
	ENDIF( FREEIMAGEPLUS_FIND_REQUIRED)
ENDIF(FREEIMAGEPLUS_FOUND)
